{"version":3,"sources":["components/TodoList/TodoList.tsx","api/api.ts","components/LoadingError/LoadingError.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","state","todos","props","searchQuery","todoStatus","randomOrder","changeHandler","target","setState","value","onStatusSelect","event","onRandom","shuffleTodos","i","length","j","Math","floor","random","temp","this","selectUser","visibleTodos","filter","todo","completed","lowCaseQuery","toLowerCase","title","includes","className","onChange","type","placeholder","onClick","map","classNames","readOnly","userId","id","React","Component","BASE_URL","LoadingError","errorMessage","CurrentUser","user","isLoading","a","loadData","prevProps","fetch","then","response","json","color","height","width","name","email","phone","clearUser","PureComponent","todosFromServer","App","selectedUserId","hasLoadingError","isInitialized","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecdc3a16.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */ // for 46 and 47 lines\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React from 'react';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n  selectUser: (id: number) => void;\n};\n\ntype State = {\n  todos: Todo[];\n  searchQuery: string;\n  todoStatus: string;\n  randomOrder: boolean;\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state = {\n    todos: this.props.todos,\n    searchQuery: '',\n    todoStatus: 'all',\n    randomOrder: false,\n  };\n\n  changeHandler = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ searchQuery: target.value });\n  };\n\n  onStatusSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ todoStatus: event.target.value });\n  };\n\n  onRandom = () => {\n    this.setState(state => ({\n      randomOrder: !state.randomOrder,\n    }));\n  };\n\n  shuffleTodos = (todos: Todo[]) => {\n    for (let i = todos.length - 1; i > 0; i -= 1) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = todos[i];\n\n      todos[i] = todos[j];\n      todos[j] = temp;\n    }\n\n    return todos;\n  };\n\n  render() {\n    const {\n      todos,\n      searchQuery,\n      todoStatus,\n      randomOrder,\n    } = this.state;\n    const { selectUser } = this.props;\n\n    let visibleTodos = [...todos];\n\n    switch (todoStatus) {\n      case 'all':\n        break;\n\n      case 'active':\n        visibleTodos = visibleTodos.filter(todo => !todo.completed);\n        break;\n\n      case 'completed':\n        visibleTodos = visibleTodos.filter(todo => todo.completed);\n        break;\n\n      default:\n        break;\n    }\n\n    visibleTodos = visibleTodos.filter(todo => {\n      const lowCaseQuery = searchQuery.toLowerCase();\n      const lowCaseTitle = todo.title.toLowerCase();\n\n      return lowCaseTitle.includes(lowCaseQuery);\n    });\n\n    if (randomOrder) {\n      visibleTodos = this.shuffleTodos(visibleTodos);\n    }\n\n    return (\n      <div className=\"TodoList content\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container content\">\n          <div className=\"TodoList__input-wrapper\">\n            <input\n              onChange={this.changeHandler}\n              value={searchQuery}\n              className=\"input is-normal\"\n              type=\"text\"\n              placeholder=\"Search...\"\n            />\n          </div>\n\n          <div className=\"select\">\n            <select onChange={this.onStatusSelect}>\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </div>\n\n          <button\n            onClick={this.onRandom}\n            type=\"button\"\n            className=\"button is-primary\"\n          >\n            Randomize\n          </button>\n\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => (\n              <li\n                className={classNames('TodoList__item', {\n                  'TodoList__item--checked': todo.completed,\n                  'TodoList__item--unchecked': !todo.completed,\n                })}\n                key={todo.id}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => selectUser(todo.userId)}\n                >\n                  User #\n                  {todo.userId}\n                </button>\n              </li>\n\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport const getTodos = (): Promise<Todo[]> => {\n  return fetch(`${BASE_URL}/todos`)\n    .then(response => response.json());\n};\n\nexport const getUser = (id: number): Promise<User> => {\n  return fetch(`${BASE_URL}/users/${id}`)\n    .then(response => response.json());\n};\n","import React from 'react';\n\ntype Props = {\n  errorMessage: string;\n};\n\nexport const LoadingError: React.FC<Props> = ({ errorMessage }) => (\n  <div className=\"notification is-danger is-light\">\n    {errorMessage}\n  </div>\n);\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\nimport { LoadingError } from '../LoadingError';\n\ntype Props = {\n  userId: number;\n  clearUser: () => void;\n};\n\ninterface State {\n  user: User | null;\n  isLoading: boolean;\n}\n\nexport class CurrentUser extends React.PureComponent<Props, State> {\n  state = {\n    user: null,\n    isLoading: false,\n  };\n\n  async componentDidMount() {\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps: Props) {\n    if ((prevProps.userId !== this.props.userId) && this.props.userId !== 0) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    try {\n      this.setState({ isLoading: true });\n\n      const user = await getUser(this.props.userId);\n\n      this.setState({\n        isLoading: false,\n        user,\n      });\n    } catch (error) {\n      this.setState({\n        isLoading: false,\n        user: null,\n      });\n    }\n  }\n\n  render() {\n    const { user, isLoading } = this.state;\n\n    if (isLoading) {\n      return (\n        <Loader\n          type=\"Oval\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n        />\n      );\n    }\n\n    if (!user) {\n      return (\n        <LoadingError\n          errorMessage=\"An error occured when loading user!\"\n        />\n      );\n    }\n\n    const {\n      id,\n      name,\n      email,\n      phone,\n    } = user;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${id}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.props.clearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport Loader from 'react-loader-spinner';\nimport { TodoList } from './components/TodoList';\nimport * as getData from './api/api';\nimport { CurrentUser } from './components/CurrentUser';\nimport 'bulma';\nimport { LoadingError } from './components/LoadingError';\n\ninterface State {\n  todos: Todo[],\n  visibleTodos: Todo[],\n  selectedUserId: number;\n  isLoading: boolean;\n  hasLoadingError: boolean;\n  isInitialized: boolean;\n}\n\nlet todosFromServer: Todo[] = [];\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: [],\n    visibleTodos: [...todosFromServer],\n    selectedUserId: 0,\n    isLoading: false,\n    hasLoadingError: false,\n    isInitialized: false,\n  };\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        isLoading: true,\n      });\n      todosFromServer = await getData.getTodos();\n\n      this.setState({\n        todos: todosFromServer,\n        visibleTodos: [...todosFromServer],\n        isLoading: false,\n        isInitialized: true,\n      });\n    } catch (error) {\n      this.setState({\n        isLoading: false,\n        hasLoadingError: true,\n      });\n    }\n  }\n\n  selectUser = (id: number) => {\n    this.setState({ selectedUserId: id });\n  };\n\n  render() {\n    const {\n      todos,\n      visibleTodos,\n      selectedUserId,\n      isLoading,\n      hasLoadingError,\n      isInitialized,\n    } = this.state;\n\n    console.log('App render');\n\n    if (isLoading) {\n      return (\n        <Loader\n          type=\"Oval\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n        />\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {(isInitialized && todos.length > 0) && (\n            <TodoList\n              todos={visibleTodos}\n              selectUser={this.selectUser}\n            />\n          )}\n\n          {hasLoadingError && (\n            <LoadingError\n              errorMessage=\"An error occured when loading todos!\"\n            />\n          )}\n        </div>\n\n        {isInitialized && todos.length > 0 && (\n          <div className=\"App__content\">\n            <div className=\"App__content-container\">\n              {selectedUserId ? (\n                <CurrentUser\n                  userId={selectedUserId}\n                  clearUser={() => this.selectUser(0)}\n                />\n              ) : 'No user selected'}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}